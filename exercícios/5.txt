Data: 29/03/2017

Para as questões 2 a 5, considere que as variáveis 'f', 'g', 'h', 'i' e 'j' são do tipo inteiro (16 bits na arquitetura do MSP430), e que o vetor 'A[]' é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores:
	f: R4
	g: R5
	h: R6
	i: R7
	j: R8
	A: R9
Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.

1. Escreva os trechos de código assembly do MSP430 para:
	(a) Somente setar o bit menos significativo de R5.

		bis.w #1h,R5

	(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo.

		bis.w #2h,R6

	(c) Somente zerar o terceiro bit menos significativo de R7.
		
		mov.w #04h,R11
		bic.w R11,R7

	(d) Somente zerar o terceiro e o quarto bits menos significativo de R8.
		
		mov.w #0Ch,R8
		bic.w R11,R7
		
	(e) Somente inverter o bit mais significativo de R9.

		mov.w 80,R12
		xor.w R12,R9	

	(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10. 

		mov #0F,R12
		bic.b R12,R10

2. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	if(i>j) f = g+h+10;
	else f = g-h-10;
Resposta:
	cmp R8,R7   
	jge else
	mov.w R5,R4
	add.w R6,R4
	add.w #10,R4
	jmp exit
else:
	mov.w R5,R4
        sub.w R6,R4
        sub.w #10,R4
exit:

3. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	while(save[i]!=k) i++;
Resposta:

mov.w #00h,R7
mov.w 
INIT:	
LOOP:	
	
	cmp #99,R7
	jge EXIT

	inc.w R7
	
	jmp LOOP
	
EXIT:

	
4. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	for(i=0; i<100; i++) A[i] = i*2;
	
Resposta:
	mov.w #00h,R7
	mov.w 
INIT:	
LOOP:	
	
	cmp #99,R7
	jge EXIT

	add.w R7,(R9)	
	add.w R7,(R9)
	inc.w R7
	
	jmp LOOP
	
EXIT:
5. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	for(i=99; i>=0; i--) A[i] = i*2;
